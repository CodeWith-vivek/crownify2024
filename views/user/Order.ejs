<%- include("../../views/partials/user/headerprofile") %>

    <div class="col-md-9">
        <div id="orderModal" class="modal" style="display:none;">
            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>
                <h2>Order Details - #<span id="modalOrderId"></span></h2>
                <div id="orderDetails">
                    <div class="order-info mb-4">
                        <p><strong>Name:</strong> <span id="modalCustomer"></span></p>
                        <p><strong>Order Date:</strong> <span id="modalDate"></span></p>
                    </div>
                    <h3>Items</h3>
                    <div class="products-list" id="modalItems">
                        <!-- Products will be dynamically inserted here -->
                    </div>
                </div>
            </div>
        </div>
        <div id="cancelModal" class="modal">
            <div class="modal-content p-4">
                <h4>Cancel Item</h4>
                <p><strong>Order ID:</strong> <span id="cancelOrderId"></span></p>
                <div class="d-flex align-items-start mb-3">
                    <img id="cancelProductImage" src="" alt="Product Image" class="me-3 rounded" width="100"
                        height="100">
                    <div>
                        <p><strong>Product Name:</strong> <span id="cancelProductName"></span></p>
                        <p><strong>Size:</strong> <span id="cancelProductSize"></span></p>
                        <p><strong>Color:</strong> <span id="cancelProductColor"></span></p>
                        <p><strong>Price:</strong> ₹<span id="cancelProductPrice"></span></p>
                    </div>
                </div>
                <div class="form-group">
                    <label for="cancelComment">Reason for cancellation:</label>
                    <textarea id="cancelComment" class="form-control" rows="3"
                        placeholder="Enter your reason"></textarea>
                </div>
                <div class="d-flex justify-content-between mt-3">
                    <button id="submitCancellation" class="btn btn-primary">Submit</button>
                    <button onclick="closeModal('cancelModal')" class="btn btn-secondary">Close</button>
                </div>
            </div>
        </div>

        <div id="returnModal" class="modal">
            <div class="modal-content p-4">
                <h4>Return Item</h4>
                <p><strong>Order ID:</strong> <span id="returnOrderId"></span></p>
                <div class="d-flex align-items-start mb-3">
                    <img id="returnProductImage" src="" alt="Product Image" class="me-3 rounded" width="100"
                        height="100">
                    <div>
                        <p><strong>Product Name:</strong> <span id="returnProductName"></span></p>
                        <p><strong>Size:</strong> <span id="returnProductSize"></span></p>
                        <p><strong>Color:</strong> <span id="returnProductColor"></span></p>
                        <p><strong>Price:</strong> ₹<span id="returnProductPrice"></span></p>
                    </div>
                </div>
                <div class="form-group">
                    <label for="returnComment">Reason for return:</label>
                    <textarea id="returnComment" class="form-control" rows="3"
                        placeholder="Enter your reason"></textarea>
                </div>
                <div class="d-flex justify-content-between mt-3">
                    <button id="submitReturn" class="btn btn-primary">Submit</button>
                    <button onclick="closeModal('returnModal')" class="btn btn-secondary">Close</button>
                </div>
            </div>
        </div>



        <div class="tab-content dashboard-content">

            <div id="orders">

                <div class="container mt-4">
                    <div class="card">
                        <div class="card-body" style="padding: 0px;">
                            <div class="card-header">
                                <h5 class="mb-0">Your Orders</h5>
                            </div>

                            <div class="row mb-3 d-none d-md-flex text-muted">
                                <div class="col-md-4 ps-5">PRODUCT</div>
                                <div class="col-md-2">QUANTITY</div>
                                <div class="col-md-2">PRICE</div>
                                <div class="col-md-2">STATUS</div>
                                <div class="col-md-2">ACTIONS</div>
                            </div>
                            <div class="order-list">
                                <% if (orders.length===0) { %>
                                    <div class="alert alert-warning" role="alert"> You have not ordered anything yet.
                                    </div>
                                    <% } else { %>
                                        <% orders.forEach(order=> { %>
                                            <div class="order-item p-3 mb-3 rounded border"
                                                data-order-id="<%= order._id %>" data-customer-name="<%= user.name %>"
                                                data-order-date="<%= order.createdAt %>"
                                                data-address="<%= order.shippingAddress || 'N/A' %>"
                                                data-items='<%= JSON.stringify(order.items) %>'
                                                data-timeline='<%= JSON.stringify(order.timeline || []) %>'>
                                                <div class="row align-items-center">
                                                    <% order.items.forEach(item=> { %>
                                                        <div class="col-12 col-md-4 mb-3 mb-md-0">
                                                            <div class="d-flex align-items-center">
                                                                <img src="/uploads/product-image/<%= item.productImage || 'https://via.placeholder.com/60' %>"
                                                                    alt="<%= item.productId?.productName || 'Product' %>"
                                                                    class="me-3 rounded" width="60" height="60">
                                                                <div>
                                                                    <div class="fw-medium">
                                                                        <%= item.productId?.productName
                                                                            || 'Product Name' %>
                                                                    </div>
                                                                    <div class="text-muted">₹<%=
                                                                            item.productId?.salePrice ||
                                                                            item.productId?.regularPrice || 0 %>
                                                                    </div>
                                                                    <div class="text-muted">
                                                                        <%= item.variant.size %>
                                                                    </div>
                                                                    <div class="text-muted">
                                                                        <%= item.variant.color || 'N/A' %>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-6 col-md-2 mb-2 mb-md-0">
                                                            <div class="d-md-none text-muted fs-6 mb-1">QUANTITY</div>
                                                            <div class="quantity-control fs-6"><span class="mx-2 fs">
                                                                    <%= item.quantity || 0 %>
                                                                </span></div>
                                                        </div>
                                                        <div class="col-6 col-md-2 mb-2 mb-md-0">
                                                            <div class="d-md-none text-muted fs-6 mb-1">PRICE</div>
                                                            <div class="fs">₹<%= (item.productId?.salePrice ||
                                                                    item.productId?.regularPrice || 0) * item.quantity
                                                                    %>
                                                            </div>
                                                        </div>
                                                        <div class="col-6 col-md-2 mb-2 mb-md-0">
                                                            <div class="d-md-none text-muted fs-6 mb-1">STATUS</div>
                                                            <span
                                                                class="<%= order.orderStatus === 'Delivered' ? 'text-success' : 'text-warning' %>">
                                                                <%= item.orderStatus || 'Pending' %>
                                                            </span>
                                                        </div>
                                                        <div class="col-6 col-md-2">
                                                            <button
                                                                class="btn btn-dark btn-outline-secondary btn w-100 w-md-auto mb-1 view-order"
                                                                style="font-size : smaller;">
                                                                View <i class="bi bi-chevron-down ms-1"></i>
                                                            </button>
                                                            <% if (order.orderStatus==='Placed' ||
                                                                order.orderStatus==='Confirmed' ) { %>
                                                                <button
                                                                    class="btn btn-danger btn-outline-secondary btn w-100 w-md-auto mb-1"
                                                                    style="font-size: smaller;">
                                                                    Cancel Order <i class="bi bi-chevron-down ms-1"></i>
                                                                </button>
                                                                <% } %>
                                                                    <% if (order.orderStatus==='Delivered' ) { %>
                                                                        <button
                                                                            class="btn btn-warning btn-outline-secondary btn w-100 w-md-auto mb-1"
                                                                            style="font-size: smaller;">
                                                                            Return <i
                                                                                class="bi bi-chevron-down ms-1"></i>
                                                                        </button>
                                                                        <% } %>
                                                        </div>
                                                        <% }); %>
                                                </div>
                                            </div>
                                            <% }); %>
                                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <%- include("../../views/partials/user/footerprofile") %>
        <script>




            document.querySelectorAll('.view-order').forEach(button => {
                button.addEventListener('click', function () {
                    const orderItem = this.closest('.order-item');
                    const orderId = orderItem.getAttribute('data-order-id');
                    const customerName = orderItem.getAttribute('data-customer-name');
                    const orderDate = orderItem.getAttribute('data-order-date');
                    const items = JSON.parse(orderItem.getAttribute('data-items'));

                   
                    document.getElementById('modalOrderId').textContent = orderId;
                    document.getElementById('modalCustomer').textContent = customerName;
                    document.getElementById('modalDate').textContent = new Date(orderDate).toLocaleDateString();

                 
                    const modalItems = document.getElementById('modalItems');
                    modalItems.innerHTML = '';

                    items.forEach((item, index) => {
                        const itemDiv = document.createElement('div');
                        itemDiv.className = 'product-item p-3 mb-3 border rounded';

                        const itemStatus = item.orderStatus || 'Return Pending';
                        const itemPrice = (item.productId?.salePrice || item.productId?.regularPrice || 0) * item.quantity;

                    
                        const getBadgeClass = (status) => {
                            const badgeClasses = {
                                'Delivered': 'bg-success',
                                'Return Pending': 'bg-warning',
                                'Return Requested': 'bg-warning',
                                'Return Approved': 'bg-info',
                                'Return Rejected': 'bg-danger',
                                'Placed': 'bg-warning',
                                'Confirmed': 'bg-warning',
                                'Cancelled': 'bg-danger'
                            };
                            return badgeClasses[status] || 'bg-secondary';
                        };

                       
                        const getActionButton = (status) => {
                            const commonAttributes = `
                    data-order-id="${orderId}" 
                    data-item-index="${index}" 
                    data-product-name="${item.productId?.productName}" 
                    data-product-image="${item.productImage || 'placeholder.jpg'}"
                    data-product-color="${item.variant.color || 'N/A'}"
                    data-product-size="${item.variant.size || 'N/A'}"
                    data-product-price="${itemPrice}"
                `;

                            switch (status) {
                                case 'Delivered':
                                    return `
                        <button class="btn btn-warning btn-sm w-100 return-item" ${commonAttributes}>
                            Return Item
                        </button>`;
                                case 'Return Requested':
                                    return `
                        <button class="btn btn-danger btn-sm w-100 cancel-return" ${commonAttributes}>
                            Cancel Return Request
                        </button>`;
                                case 'Placed':
                                case 'Confirmed':
                                    return `
                        <button class="btn btn-danger btn-sm w-100 cancel-item" ${commonAttributes}>
                            Cancel Item
                        </button>`;
                                default:
                                    return '';
                            }
                        };

                        itemDiv.innerHTML = `
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="d-flex align-items-center">
                            <img src="/uploads/product-image/${item.productImage || 'placeholder.jpg'}" 
                                 alt="${item.productId?.productName}" 
                                 class="me-3 rounded" 
                                 width="60" height="60">
                            <div>
                                <div class="fw-medium">${item.productId?.productName}</div>
                                <div class="text-muted">Size: ${item.variant.size}</div>
                                <div class="text-muted">Color: ${item.variant.color || 'N/A'}</div>
                                <div class="text-muted">Quantity: ${item.quantity}</div>
                                <div class="text-muted">Price: ₹${itemPrice}</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <span class="badge ${getBadgeClass(itemStatus)}">
                            ${itemStatus}
                        </span>
                    </div>
                    <div class="col-md-3">
                        ${getActionButton(itemStatus)}
                    </div>
                </div>
            `;
                        modalItems.appendChild(itemDiv);
                    });

                   
                    document.getElementById('orderModal').style.display = 'block';

                 
                    setupActionButtons();
                });
            });

            function setupActionButtons() {
           
                document.querySelectorAll('.cancel-item').forEach(button => {
                    button.addEventListener('click', function () {
                        const orderId = this.getAttribute('data-order-id');
                        const itemIndex = this.getAttribute('data-item-index');
                        const productName = this.getAttribute('data-product-name');
                        const productImage = this.getAttribute('data-product-image');
                        const productColor = this.getAttribute('data-product-color');
                        const productSize = this.getAttribute('data-product-size');
                        const productPrice = this.getAttribute('data-product-price');

                      
                        document.getElementById('cancelOrderId').textContent = orderId;
                        document.getElementById('cancelProductName').textContent = productName;
                        document.getElementById('cancelProductImage').src = `/uploads/product-image/${productImage || 'placeholder.jpg'}`;
                        document.getElementById('cancelProductColor').textContent = productColor || 'N/A';
                        document.getElementById('cancelProductSize').textContent = productSize || 'N/A';
                        document.getElementById('cancelProductPrice').textContent = productPrice;

                      
                        document.getElementById('cancelModal').style.display = 'block';

                       
                        const submitCancellationButton = document.getElementById('submitCancellation');
                        submitCancellationButton.onclick = function () {
                            handleItemCancellation(
                                orderId,
                                itemIndex,
                                productName,
                                productSize,
                                productColor,
                                productPrice
                            );
                        };
                    });
                });

              
                document.querySelectorAll('.return-item').forEach(button => {
                    button.addEventListener('click', function () {
                        const orderId = this.getAttribute('data-order-id');
                        const itemIndex = this.getAttribute('data-item-index');
                        const productName = this.getAttribute('data-product-name');
                        const productImage = this.getAttribute('data-product-image');
                        const productColor = this.getAttribute('data-product-color');
                        const productSize = this.getAttribute('data-product-size');
                        const productPrice = this.getAttribute('data-product-price');

                       
                        document.getElementById('returnOrderId').textContent = orderId;
                        document.getElementById('returnProductName').textContent = productName;
                        document.getElementById('returnProductImage').src = `/uploads/product-image/${productImage || 'placeholder.jpg'}`;
                        document.getElementById('returnProductColor').textContent = productColor || 'N/A';
                        document.getElementById('returnProductSize').textContent = productSize || 'N/A';
                        document.getElementById('returnProductPrice').textContent = productPrice;

                      
                        document.getElementById('returnComment').value = '';

                       
                        document.getElementById('returnModal').style.display = 'block';

                       
                        const submitReturnButton = document.getElementById('submitReturn');
                        submitReturnButton.onclick = function () {
                            handleReturnSubmission(
                                orderId,
                                itemIndex,
                                productName,
                                productSize,
                                productColor,
                                productPrice);
                        };
                    });
                });
            }

            function handleReturnSubmission(orderId, itemIndex, productName, productSize, productColor, productPrice) {
                const comment = document.getElementById('returnComment').value.trim();
                if (!comment) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Comment Required',
                        text: 'Please provide a reason for return before proceeding.',
                        confirmButtonText: 'OK'
                    });
                    return;
                }

              
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you really want to submit this return request?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, submit it!',
                    cancelButtonText: 'No, keep it'
                }).then((result) => {
                    if (result.isConfirmed) {
                     
                        Swal.fire({
                            title: 'Processing...',
                            text: 'Please wait while we process your return request.',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        
                        const data = {
                            orderId,
                            productName,
                            productSize,
                            productColor,
                            productPrice,
                            returnComment: comment,
                        };

                      
                        fetch('/return-item', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Return Submitted',
                                        text: 'Your return request has been submitted successfully.',
                                        confirmButtonText: 'OK'
                                    }).then(() => {
                                      
                                        window.location.reload();
                                    }).then(() => {
                                        
                                        const returnButton = document.querySelector(`.return-item[data-order-id="${orderId}"][data-item-index="${itemIndex}"]`);
                                        returnButton.innerText = 'Cancel Return';
                                        returnButton.classList.remove('btn-warning');
                                        returnButton.classList.add('btn-danger');
                                        returnButton.disabled = false;

                                      
                                        const statusBadge = returnButton.closest('.product-item').querySelector('.badge');
                                        if (statusBadge) {
                                            statusBadge.innerText = 'Return Requested';
                                            statusBadge.classList.remove('bg-success');
                                            statusBadge.classList.add('bg-warning');
                                        }

                                       
                                        closeModal('returnModal');
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Submission Failed',
                                        text: data.message || 'Failed to submit the return request. Please try again later.',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'An error occurred while submitting the return request. Please try again later.',
                                    confirmButtonText: 'OK'
                                });
                            });
                    }
                });
            }

            function handleItemCancellation(orderId, itemIndex, productName, productSize, productColor, productPrice) {
                const cancelComment = document.getElementById('cancelComment').value.trim();

               
                if (!cancelComment) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Comment Required',
                        text: 'Please provide a reason for cancellation before proceeding.',
                        confirmButtonText: 'OK'
                    });
                    return;
                }

               
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you really want to cancel this item?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, cancel it!',
                    cancelButtonText: 'No, keep it'
                }).then((result) => {
                    if (result.isConfirmed) {
                      
                        Swal.fire({
                            title: 'Processing...',
                            text: 'Please wait while we cancel your item.',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        
                        const data = {
                            orderId,
                            productName,
                            productSize,
                            productColor,
                            productPrice,
                            cancelComment
                        };

                       
                        fetch('/cancel-item', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Item Canceled',
                                        text: 'The item has been successfully canceled.',
                                        confirmButtonText: 'OK'
                                    }).then(() => {
                                      
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Cancellation Failed',
                                        text: data.message || 'Failed to cancel the item. Please try again later.',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'An error occurred while canceling the item. Please try again later.',
                                    confirmButtonText: 'OK'
                                });
                            });
                    } else {
                       
                        Swal.fire({
                            icon: 'info',
                            title: 'Action Cancelled',
                            text: 'The item was not canceled.',
                            toast: true,
                            position: 'top-end',
                            timer: 3000,
                            timerProgressBar: true,
                            showConfirmButton: false
                        });
                    }
                });
            }

            function closeModal(modalId) {
                if (modalId) {
                    document.getElementById(modalId).style.display = 'none';
                } else {
                    document.querySelectorAll('.modal').forEach(modal => {
                        modal.style.display = 'none'; 
                    });
                }

              
                if (modalId === 'orderModal') {
                    document.getElementById('modalItems').innerHTML = ''; 
                } else if (modalId === 'cancelModal') {
                    document.getElementById('cancelComment').value = ''; 
                } else if (modalId === 'returnModal') {
                    document.getElementById('returnComment').value = ''; 
                }
            }

          
            window.onclick = function (event) {
                const modals = document.querySelectorAll('.modal');
                modals.forEach(modal => {
                    if (event.target === modal) {
                        modal.style.display = 'none';
                    }
                });
            };
        </script>