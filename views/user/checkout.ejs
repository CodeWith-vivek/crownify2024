<%- include("../../views/partials/user/headershop") %>

    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Check Out</h4>
                        <div class="breadcrumb__links">
                            <a href="./index.html">Home</a>
                            <a href="./shop.html">Shop</a>
                            <span>Check Out</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
 
    <section class="checkout spad">
        <div class="container">
            <div class="checkout__form">
            <form id="checkoutForm" action="/checkout" method="POST">
                    <div class="row">
                        <div class="col-lg-7 col-md-5">
                            <% addresses.forEach(address=> { %>
                                <div class="card mb-3 mb-lg-3">
                                    <div class="card-header d-flex justify-content-between align-items-center"
                                        style="background-color: #cf8484;">
                                        <h5 class="mb-0">Address</h5>
                                        <% if (address.isPrimary) { %>
                                            <span class="badge bg-success"
                                                style="margin-right: 23px; color:white; background-color: #703535 !important;">Primary</span>
                                            <% } %>
                                    </div>
                                    <div class="card-body">
                                        <address>
                                            <%= address.fullName %><br>
                                                <%= address.flatHouseCompany %>, <%= address.areaStreet %><br>
                                                        <%= address.city %>, <%= address.state %> - <%= address.postalCode
                                                                    %><br>
                                                                    <%= address.mobileNumber %><br>
                                        </address>
                                        <div class="d-flex justify-content-between">
                                            <% if (!address.isPrimary) { %>
                                                <a href="#" class="btn-small btn-link"
                                                    onclick="confirmPrimaryAddress(event, '<%= address._id %>')">
                                                    Set as Primary
                                                </a>
                                                <% } %>
                                        </div>
                                    </div>
                                </div>
                                <% }); %>
                                    <button class="btn btn-primary"
                                        style="width: 150px; background-color: #703535; margin-left: 20px;">Add
                                        Address</button>
                        </div>
                        <div class="col-lg-5 col-md-7">
                            <div class="checkout__order">
                                <h4 class="order__title">Your order</h4>
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Product</th>
                                            <th>Quantity</th>
                                            <th>Price</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% products.forEach(product=> { %>
                                            <tr>
                                                <td>
                                                    <div class="product-info">
                                                        <div class="product-image">
                                                            <img src="/uploads/product-image/<%= product.productImage %>"
                                                                style="width: 50px; height: 50px; margin-right: 10px;">
                                                        </div>
                                                        <div class="product-details product-details-small">
                                                            <p>
                                                                <b>
                                                                    <%= product.productName %>
                                                                </b>
                                                            </p>
                                                            <p>
                                                                <%= product.productBrand %>
                                                            </p>
                                                            <p>
                                                                <%= product.size %>
                                                            </p>
                                                            <p>
                                                                <%= product.color %>
                                                            </p>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <input type="text" name="quantities[]" value="<%= product.quantity %>"
                                                        readonly
                                                        style="width: 50px; border: none; background: transparent;">
                                                    <input type="hidden" name="products[]" value="<%= product.productId %>">
                                            
                                                    <input type="hidden" name="sizes[]" value="<%= product.size %>"> <!-- Add this line for size -->
                                                    <input type="hidden" name="colors[]" value="<%= product.color %>"> <!-- Add this line for color -->
                                                </td>
                                                <td>$
                                                    <%= product.itemTotal %>
                                                </td>
                                            </tr>
                                            <% }); %>
                                    </tbody>
                                </table>
                                <ul class="checkout__total__all">
                                    <li>Subtotal <span>$<%= subtotal.toFixed(2) %></span>
                                        <input type="hidden" name="subtotal" value="<%= subtotal %>">
                                    </li>
                                    <li>Shipping <span style="color: gray; font-size: 14px;">$<%= shipping.toFixed(2) %>
                                                </span>
                                        <input type="hidden" name="shipping" value="<%= shipping %>">
                                    </li>
                                    <li>Total <span>$<%= total.toFixed(2) %></span>
                                        <input type="hidden" name="total" value="<%= total %>">
                                    </li>
                                </ul>
                                <h4 class="order__title">Payment Method</h4>
                                <div class="checkout__input__checkbox">
                                    <label for="payment">
                                        Cash On Delivery
                                        <input type="radio" id="payment" name="paymentMethod" value="COD" >
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <input type="hidden" name="primaryAddressId"
                                    value="<%= addresses.find(address => address.isPrimary)._id %>">
                                <button type="submit" class="site-btn">Proceed to
                                    Checkout</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </section>
    <%- include("../../views/partials/user/footershop") %>
    <script>
     

//   

  document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('checkoutForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Check if any payment method is selected
            const paymentChecked = document.querySelector('input[name="paymentMethod"]:checked');
            const primaryAddress = document.querySelector('.badge.bg-success');

            if (!paymentChecked) {
                Swal.fire({
                    title: 'Payment Method Required',
                    text: 'Please select a payment option to proceed.',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
                return; // Exit the function if no payment method is selected
            }

            if (!primaryAddress) {
                Swal.fire({
                    title: 'Primary Address Required',
                    text: 'Please select a primary address before proceeding.',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
                return; // Exit the function if no primary address is selected
            }

            Swal.fire({
                title: 'Confirm Order',
                text: 'Are you sure you want to place this order?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, place it!',
                cancelButtonText: 'Cancel'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    // Prepare the form data
                    const formData = {
                        primaryAddressId: document.querySelector('input[name="primaryAddressId"]').value,
                        products: Array.from(document.querySelectorAll('input[name="products[]"]')).map(input => input.value),
                        quantities: Array.from(document.querySelectorAll('input[name="quantities[]"]')).map(input => input.value),
                        sizes: Array.from(document.querySelectorAll('input[name="sizes[]"]')).map(input => input.value),
                        colors: Array.from(document.querySelectorAll('input[name="colors[]"]')).map(input => input.value),
                        subtotal: document.querySelector('input[name="subtotal"]').value,
                        shipping: document.querySelector('input[name="shipping"]').value,
                        total: document.querySelector('input[name="total"]').value,
                        paymentMethod: paymentChecked.value,
                    };

                    try {
                        const response = await fetch('/checkout', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(formData),
                        });
                        const data = await response.json();

                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Order Placed!',
                                text: data.message + ' Order ID: ' + data.orderId,
                                showConfirmButton: false,
                                timer: 3000,
                            }).then(() => {
                                window.location.href = '/shop'; // Redirect to order summary page
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Order Failed',
                                text: data.message,
                                showConfirmButton: false,
                                timer: 5000,
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Server Error',
                            text: 'Unable to connect to the server. Please try again later.',
                            confirmButtonText: 'Okay'
                        });
                    }
                }
            });
        });
    });
            function confirmPrimaryAddress(event, addressId) {
                event.preventDefault();
                console.log("Function called with addressId:", addressId); // Debug log

                Swal.fire({
                    title: 'Set as Primary Address?',
                    text: 'Do you want to set this as your primary address?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, set it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/set-primary-address/${addressId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            credentials: 'same-origin'  // Important for sessions
                        })
                            .then(async response => {
                                console.log("Response status:", response.status); // Debug log

                                if (!response.ok) {
                                    const text = await response.text();
                                    console.log("Error response body:", text); // Debug log
                                    throw new Error(`HTTP error! status: ${response.status}`);
                                }
                                return response.json();
                            })
                            .then(data => {
                                console.log("Success response:", data); // Debug log
                                if (data.success) {
                                    Swal.fire({
                                        title: 'Success!',
                                        text: 'Primary address updated successfully.',
                                        icon: 'success',
                                        confirmButtonText: 'OK'
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Failed!',
                                        text: data.message || 'Failed to update primary address.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'An error occurred while updating primary address. Please try again.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            });
                    }
                });
            }
    </script>