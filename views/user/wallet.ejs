<%- include("../../views/partials/user/headerwallet") %>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="wallet-card">
                    <div class="wallet-header">
                        <h2><i class="fas fa-wallet me-2" style="color:white;"></i>My Wallet</h2>
                    </div>
                    <div class="wallet-body">
                        <div class="text-center mb-4">
                            <p class="mb-1">Current Balance</p>
                            <h3 class="balance">₹<%= user.wallet.toFixed(2) || "0.00" %>
                            </h3>
                        </div>
                        <form id="add-money-form">
                            <div class="mb-3">
                                <label for="amount" class="form-label">Add Amount</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-rupee-sign"></i></span>
                                    <input type="number" class="form-control" id="amount" name="amount" min="0"
                                        placeholder="Enter amount" />
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary btn-add w-100">
                                <i class="fas fa-plus-circle me-2"></i>Add to Wallet
                            </button>
                        </form>
                        <div class="mt-4">
                            <h5 class="mb-3">Quick Add</h5>
                            <div class="d-flex justify-content-between">
                                <button class="btn btn-outline-primary" onclick="quickAdd(10)">₹10</button>
                                <button class="btn btn-outline-primary" onclick="quickAdd(50)">₹50</button>
                                <button class="btn btn-outline-primary" onclick="quickAdd(100)">₹100</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <%- include("../../views/partials/user/footershop") %>

        <!-- SweetAlert JS -->
        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            const RAZORPAY_KEY_ID = '<%= process.env.RAZORPAY_KEY_ID %>'; // Use server-side templating if applicable

            document.getElementById('add-money-form').addEventListener('submit', async (e) => {
                e.preventDefault();

                const amount = document.getElementById('amount').value;
                console.log("Amount to add:", amount); // Debug log

                if (amount <= 0) {
                    Swal.fire("Error", "Please enter a valid amount.", "error");
                    return;
                }

                try {
                    // Step 1: Create a Razorpay order
                    const response = await fetch('/wallet/add-money', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ amount }),
                    });
                    console.log("Response status:", response.status); // Debug response status

                    const data = await response.json();
                    console.log("Response from server:", data); // Debug log

                    if (data.success) {
                        // Step 2: Open Razorpay payment modal
                        const options = {
                            key: RAZORPAY_KEY_ID, // Enter the Test API Key ID
                            amount: data.amount * 100, // Amount in paise
                            currency: 'INR',
                            name: 'Your Company Name',
                            description: 'Add to Wallet',
                            order_id: data.orderId, // Use the order ID created in the backend
                            handler: async function (response) {
                                // Step 3: Confirm payment and update wallet
                                const confirmResponse = await fetch('/confirm-payment', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        userId: '<%= user._id %>', // Replace with actual user ID
                                        orderId: response.razorpay_order_id,
                                        paymentId: response.razorpay_payment_id,
                                        signature: response.razorpay_signature, // Include the signature
                                        amount: amount,
                                    }),
                                });

                                const confirmData = await confirmResponse.json();
                                console.log("Payment confirmation response:", confirmData); // Debug log

                                if (confirmData.success) {
                                    Swal.fire({
                                        title: "Success",
                                        text: confirmData.message,
                                        icon: "success",
                                    }).then(() => {
                                        location.reload(); // Reload the page to update the wallet balance
                                    });
                                } else {
                                    Swal.fire({
                                        title: "Error",
                                        text: confirmData.message,
                                        icon: "error",
                                    });
                                }
                            },
                            prefill: {
                                name: 'Customer Name',
                                email: 'customer@example.com',
                                contact: '9999999999',
                            },
                            theme: {
                                color: '#F37254',
                            },
                        };

                        const rzp = new Razorpay(options);
                        rzp.open();
                    } else {
                        Swal.fire("Error", data.message, "error");
                    }
                } catch (error) {
                    console.error("Error during payment process:", error);
                    Swal.fire("Error", "Something went wrong. Please try again.", "error");
                }
            });

            window.addEventListener('DOMContentLoaded', async () => {
                try {
                    const response = await fetch('/wallet/balance');
                    const data = await response.json();

                    console.log("Balance response:", data); // Debug log

                    if (data.success) {
                        document.querySelector('.balance').textContent = `₹${data.balance.toFixed(2)}`;
                    } else {
                        Swal.fire("Error", data.message, "error");
                    }
                } catch (error) {
                    console.error('Error fetching balance:', error);
                    Swal.fire("Error", "An error occurred while fetching the balance.", "error");
                }
            });

            function quickAdd(amount) {
                const amountInput = document.getElementById("amount");
                amountInput.value = amount; // Set the amount
                console.log("Quick add amount set to:", amount); // Debug log

                // Submit the form programmatically
                document.getElementById("add-money-form").dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));
            }
        </script>
        <script>




            document.addEventListener('DOMContentLoaded', () => {
                const cartLinks = document.querySelectorAll('.site-header__cart');

                cartLinks.forEach(link => {
                    link.addEventListener('click', (e) => {
                        console.log('Cart link clicked');


                        e.stopPropagation();


                        window.location.href = '/cart';


                        e.preventDefault();
                    });
                });
            });
        </script>