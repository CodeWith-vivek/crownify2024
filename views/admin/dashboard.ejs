<%- include("../../views/partials/admin/headerdashboard") %>
    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Dashboard </h2>
                <p>Whole data about your business here</p>
            </div>
            <!-- <div>
                <a href="#" class="btn btn-primary"><i class="text-muted material-icons md-post_add"></i>Create
                    report</a>
            </div> -->
        </div>
        <!-- <div class="row">
            <div class="col-lg-3">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-primary-light"><i
                                class="text-primary material-icons md-monetization_on"></i></span>
                        <div class="text">
                            <h6 class="mb-1 card-title">Revenue</h6>
                            <span>$13,456.5</span>
                            <span class="text-sm">
                                Shipping fees are not included
                            </span>
                        </div>
                    </article>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-success-light"><i
                                class="text-success material-icons md-local_shipping"></i></span>
                        <div class="text">
                            <h6 class="mb-1 card-title">Orders</h6> <span>53.668</span>
                            <span class="text-sm">
                                Excluding orders in transit
                            </span>
                        </div>
                    </article>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-warning-light"><i
                                class="text-warning material-icons md-qr_code"></i></span>
                        <div class="text">
                            <h6 class="mb-1 card-title">Products</h6> <span>9.856</span>
                            <span class="text-sm">
                                In 19 Categories
                            </span>
                        </div>
                    </article>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-info-light"><i
                                class="text-info material-icons md-shopping_basket"></i></span>
                        <div class="text">
                            <h6 class="mb-1 card-title">Monthly Earning</h6> <span>$6,982</span>
                            <span class="text-sm">
                                Based in your local time.
                            </span>
                        </div>
                    </article>
                </div>
            </div>
        </div> -->
        <div class="row">
            <!-- <div class="col-xl-8 col-lg-12">
                <div class="card mb-4">
                    <article class="card-body">
                        <h5 class="card-title">Sale statistics</h5>
                        <canvas id="myChart" height="120px"></canvas>
                    </article>
                </div>
            </div> -->
            <div class="col-lg-12">
                <div class="card mb-4">
                    <div class="card-header">
                        <h2 class="mb-0"><i class="fas fa-chart-line me-2"></i>Sales Report</h2>
                    </div>
                    <div class="card-body">
                        <form id="reportForm">
                            <div class="mb-3">
                                <label for="type" class="form-label">Select Report Type:</label>
                                <select id="type" name="type" class="form-select" required>
                                    <option value="">-- Select Report Type --</option>
                                    <option value="daily">Daily</option>
                                    <option value="weekly">Weekly</option>
                                    <option value="monthly">Monthly</option>
                                    <option value="yearly">Yearly</option>
                                    <option value="custom">Custom Date Range</option>
                                </select>
                            </div>

                            <div id="customDateRange" class="row g-3" style="display: none;">
                                <div class="col-md-6">
                                    <label for="startDate" class="form-label">Start Date:</label>
                                    <input type="date" id="startDate" name="startDate" class="form-control">
                                </div>
                                <div class="col-md-6">
                                    <label for="endDate" class="form-label">End Date:</label>
                                    <input type="date" id="endDate" name="endDate" class="form-control">
                                </div>
                            </div>

                            <div class="mt-3">
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="fas fa-file-alt me-2"></i>Generate Report
                                </button>
                            </div>

                        </form>
                    </div>
                </div>

                <div id="reportResults" class="card" style="display: none;">
                    <div class="card-header">
                        <h3 class="mb-0"><i class="fas fa-table me-2"></i>Report Results</h3>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Total Sales Count</th>
                                        <th>Total Order Amount</th>
                                        <th>Total Discount</th>
                                        <th>Coupon Deductions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr id="reportData">
                                        <td id="totalSalesCount">0</td>
                                        <td id="totalOrderAmount">₹0.00</td>
                                        <td id="totalDiscount">₹0.00</td>
                                        <td id="couponDeductions">₹0.00</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="mt-3">
                        <button id="downloadReport" class="btn btn-secondary w-100">
                            <i class="fas fa-file-pdf me-2"></i>Download Report as PDF
                        </button>
                    </div>
                </div>
            </div>


    </section> <!-- content-main end// -->
    <!-- <div class="container mt-5"> -->

    <!-- </div> -->

    <!-- Bootstrap JS and dependencies (Popper.js) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('reportForm').addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent the default form submission

            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/admin/sales-report', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                });

                // Log the response for debugging
                console.log('Response:', response);

                const result = await response.json();

                // Log the result for debugging
                console.log('Result:', result);

                if (result.status) {
                    // Update the report results in the table
                    document.getElementById('totalSalesCount').innerText = result.report.totalSalesCount;
                    document.getElementById('totalOrderAmount').innerText = `₹${result.report.totalOrderAmount.toFixed(2)}`;
                    document.getElementById('totalDiscount').innerText = `₹${result.report.totalDiscount.toFixed(2)}`;
                    document.getElementById('couponDeductions').innerText = `₹${result.report.couponDeduction.toFixed(2)}`;

                    // Show the results section
                    document.getElementById('reportResults').style.display = 'block';

                    // Show success alert
                    Swal.fire({
                        title: 'Success!',
                        text: 'Report generated successfully.',
                        icon: 'success',
                        confirmButtonText: 'Okay'
                    });
                } else {
                    // Show error alert
                    Swal.fire({
                        title: 'Error!',
                        text: result.message || 'An error occurred while generating the report.',
                        icon: 'error',
                        confirmButtonText: 'Okay'
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                // Show error alert for network or other issues
                Swal.fire({
                    title: 'Error!',
                    text: 'An internal error occurred. Please try again later.',
                    icon: 'error',
                    confirmButtonText: 'Okay'
                });
            }
        });

        // Show custom date range fields based on selection
        document.getElementById('type').addEventListener('change', function () {
            const customDateRange = document.getElementById('customDateRange');
            if (this.value === 'custom') {
                customDateRange.style.display = 'flex';
            } else {
                customDateRange.style.display = 'none';
            }
        });
        document.getElementById('downloadReport').addEventListener('click', async () => {
            const reportType = document.getElementById('type').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            // Prepare the data to send to the server
            const data = {
                type: reportType,
                startDate: startDate,
                endDate: endDate
            };

            try {
                const response = await fetch('/admin/sales-report/pdf', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                });

                if (response.ok) {
                    // Create a blob from the response
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.style.display = 'none';
                    a.href = url;
                    a.download = `Sales_Report_${new Date().toISOString().slice(0, 10)}.pdf`;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    a.remove();
                } else {
                    // Handle error response without alert
                    const result = await response.json();
                    console.error('Error generating PDF:', result.message || 'An error occurred while generating the PDF.');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    </script>
    <script>
        // Handle logout action with fetch
        document.getElementById('logoutLink').addEventListener('click', function (event) {
            event.preventDefault(); // Prevent the default link behavior

            // Send fetch request to logout
            fetch('/admin/logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ action: 'logout' })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {

                        Swal.fire({
                            icon: 'success',
                            title: 'Logged Out',
                            text: data.message,
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {

                            window.location.replace('/admin/login');
                        });
                    } else {

                        Swal.fire({
                            icon: 'error',
                            title: 'Logout Failed',
                            text: data.message,
                            confirmButtonText: 'Try Again'
                        });
                    }
                })
                .catch(error => {

                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred. Please try again later.',
                        confirmButtonText: 'Okay'
                    });
                });
        });
    </script>