<%- include("../../views/partials/admin/header2") %>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" name="productName" value="<%= product.productName %>"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>

                            <!-- Brand Selection -->
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% for (let i=0; i < brand.length; i++) { %>
                                        <option value="<%= brand[i].brandName %>" <%=brand[i].brandName===product.brand
                                            ? 'selected' : '' %>>
                                            <%= brand[i].brandName %>
                                        </option>
                                        <% } %>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>

                            <!-- Dynamic Size and Color Container -->
                            <div id="sizeColorContainer">
                                <% if (product.variants && product.variants.length> 0) { %>
                                    <% product.variants.forEach((variant, index)=> { %>
                                        <div class="row mb-4 size-color-group">
                                            <div class="col-lg-4 mb-2">
                                                <label class="form-label">Size</label>
                                                <select class="form-select border" name="sizes[]">
                                                    <option value="">Select Size</option>
                                                    <option value="ONESIZE" <%=variant.size==='ONESIZE' ? 'selected'
                                                        : '' %>
                                                        >ONESIZE</option>
                                                    <option value="S / M" <%=variant.size==='S / M' ? 'selected' : '' %>
                                                        >S /
                                                        M</option>
                                                    <option value="M / L" <%=variant.size==='M / L' ? 'selected' : '' %>
                                                        >M /
                                                        L</option>
                                                    <option value="L / XL" <%=variant.size==='L / XL' ? 'selected' : ''
                                                        %>>L
                                                        / XL</option>
                                                    <option value="YOUTH" <%=variant.size==='YOUTH' ? 'selected' : '' %>
                                                        >YOUTH</option>
                                                </select>
                                            </div>
                                            <div class="col-lg-4 mb-2">
                                                <label class="form-label">Color</label>
                                                <input name="colors[]" type="text" class="form-control border"
                                                    placeholder="Color" value="<%= variant.color %>">
                                            </div>
                                            <div class="col-lg-4 mb-2">
                                                <label class="form-label">Quantity</label>
                                                <input name="quantities[]" type="number" class="form-control border"
                                                    placeholder="Quantity" value="<%= variant.quantity %>">
                                            </div>
                                            <% if (index> 0) { %>
                                                <div class="col-lg-12 mb-2">
                                                    <button type="button"
                                                        class="btn btn-danger removeSizeColorBtn">Remove</button>
                                                </div>
                                                <% } %>
                                        </div>
                                        <% }); %>
                                            <% } else { %>
                                                <div class="row mb-4 size-color-group">
                                                    <div class="col-lg-4 mb-2">
                                                        <label class="form-label">Size</label>
                                                        <select class="form-select border" name="sizes[]">
                                                            <option value="">Select Size</option>
                                                            <option value="ONESIZE">ONESIZE</option>
                                                            <option value="S / M">S / M</option>
                                                            <option value="M / L">M / L</option>
                                                            <option value="L / XL">L / XL</option>
                                                            <option value="YOUTH">YOUTH</option>
                                                        </select>
                                                    </div>
                                                    <div class="col-lg-4 mb-2">
                                                        <label class="form-label">Color</label>
                                                        <input name="colors[]" type="text" class="form-control border"
                                                            placeholder="Color">
                                                    </div>
                                                    <div class="col-lg-4 mb-2">
                                                        <label class="form-label">Quantity</label>
                                                        <input name="quantities[]" type="number"
                                                            class="form-control border" placeholder="Quantity">
                                                    </div>
                                                </div>
                                                <% } %>
                            </div>

                            <!-- Button to Add More Sizes/Colors -->
                            <div class="mb-4">
                                <button type="button" id="addSizeColorBtn" class="btn btn-sm btn-primary">Add More
                                    Size/Color</button>
                            </div>

                            <!-- Description -->
                            <div class="mb-4">
                                <label class="form-label">Full Description</label>
                                <textarea name="description" class="form-control border"
                                    rows="4"><%= product.description %></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>

                            <!-- Pricing -->
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular Price</label>
                                        <input name="regularPrice" placeholder="₹" type="text"
                                            value="<%= product.regularPrice %>" class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale Price</label>
                                        <input name="salePrice" placeholder="₹" type="text"
                                            value="<%= product.salePrice %>" class="form-control border">
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>

                            <!-- Category -->
                            <div class="row">
                                <div class="col-sm-6 mb-3">
                                    <label class="form-label">Category</label>
                                    <select class="form-select border" name="category">
                                        <% for (let i=0; i < cat.length; i++) { %>
                                            <option value="<%= cat[i].name %>" <%=cat[i].name===product.category
                                                ? 'selected' : '' %>>
                                                <%= cat[i].name %>
                                            </option>
                                            <% } %>
                                    </select>
                                    <div id="category-error" class="error-message"></div>
                                </div>
                            </div>

                            <!-- Image Upload -->
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose Images</h4>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <% product.productImage.forEach((image, index)=> { %>
                                            <div class="col-md-3 mb-3 position-relative">
                                                <div class="image-container position-relative">
                                                    <img class="rounded img-fluid" style="width: 100px; height: 120px; object-fit: cover;"
                                                        src="/uploads/product-image/<%= image %>" alt="Product image">
                                                    <button type="button" onclick="deleteSingleImage('<%= image %>', '<%= product._id %>')"
                                                        class="btn btn-danger btn-sm position-absolute"
                                                        style="top: 5px; right: 5px; padding: 2px 6px;">
                                                        ×
                                                    </button>
                                                </div>
                                            </div>
                                            <% }); %>
                                    </div>
                                    <div class="row">
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView1">
                                            <input class="form-control" type="file" name="images" id="input1"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage1(event), viewImage(event, 1)">
                                            <div id="images-error" class="error-message"></div>
                                        </div>
                                        <div class="image-cropper d-flex align-items-center"
                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg1" alt="">
                                            <button type="button" id="saveButton1"
                                                class="btn-sm btn-primary">Save</button>
                                        </div>
                                    </div>
                                    <!-- Repeat for additional image inputs -->
                                    <div class="row">
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView2">
                                            <input class="form-control" type="file" name="images" id="input2"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage2(event), viewImage(event, 2)">
                                        </div>
                                        <div class="image-cropper d-flex align-items-center"
                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg2" alt="">
                                            <button type="button" id="saveButton2"
                                                class="btn-sm btn-primary">Save</button>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView3">


                                            <input class="form-control" type="file" name="images" id="input3"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage3(event),viewImage(event, 3)">
                                        </div>
                                        <div class="image-cropper d-flex align-items-center"
                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg3" alt="">
                                            <button type="button" id="saveButton3"
                                                class="btn-sm btn-primary">Save</button>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView4">



                                            <input class="form-control" type="file" name="images" id="input4"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage4(event),viewImage(event, 4)">
                                        </div>
                                        <div class="image-cropper d-flex align-items-center"
                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg4" alt="">
                                            <button type="button" id="saveButton4"
                                                class="btn-sm btn-primary">Save</button>
                                        </div>
                                    </div>
                                    <!-- Add more image inputs as needed -->
                                </div>
                            </div>

                            <!-- Submit Button -->
                            <div>
                                <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="submit"
                                    onclick="validateAndSubmit()">Update</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script>
        document.getElementById('addSizeColorBtn').addEventListener('click', function () {
            const container = document.getElementById('sizeColorContainer');
            const newGroup = document.createElement('div');
            newGroup.classList.add('row', 'mb-4', 'size-color-group');
            newGroup.innerHTML = `
                <div class="col-lg-4 mb-2">
                    <label class="form-label">Size</label>
                    <select class="form-select border" name="sizes[]">
                        <option value="">Select Size</option>
                        <option value="ONESIZE">ONESIZE</option>
                        <option value="S / M">S / M</option>
                        <option value="M / L">M / L</option>
                        <option value="L / XL">L / XL</option>
                        <option value="YOUTH">YOUTH</option>
                    </select>
                </div>
                <div class="col-lg-4 mb-2">
                    <label class="form-label">Color</label>
                    <input name="colors[]" type="text" class="form-control border" placeholder="Color">
                </div>
                <div class="col-lg-4 mb-2">
                    <label class="form-label">Quantity</label>
                    <input name="quantities[]" type="number" class="form-control border" placeholder="Quantity">
                </div>
                <div class="col-lg-12 mb-2">
                    <button type="button" class="btn btn-danger removeSizeColorBtn">Remove</button>
                </div>
            `;
            container.appendChild(newGroup);

        });

        document.getElementById('sizeColorContainer').addEventListener('click', function (event) {
            if (event.target.classList.contains('removeSizeColorBtn')) {
                event.target.closest('.size-color-group').remove();
            }
        });
    </script>
    <%- include("../../views/partials/admin/footer2") %>

        <script>
            function validateAndSubmit() {
                if (validateForm()) {
                    document.forms[0].submit();
                }
            }

            function validateForm() {
                let imageDatas = false
                console.log("validate form");
                clearErrorMessages();
                const name = document.getElementsByName('productName')[0].value;
                const description = document.getElementsByName('descriptionData')[0].value;
                const brand = document.getElementsByName('brand')[0].value;
                const price = document.getElementsByName('regularPrice')[0].value;
                const saleprice = document.getElementsByName('salePrice')[0].value;
                const color = document.getElementsByName('color')[0].value;
                const category = document.getElementsByName('category')[0].value;
                const images = document.getElementById('input1')
                const quantity = document.getElementsByName('quantity')
                const size = document.getElementsByName('size')[0].value;
                imageDatas = document.getElementById("imageDatas")?.value;
                let isValid = true;
                if (name.trim() === "") {
                    displayErrorMessage('productName-error', 'Please enter a product name.');
                    isValid = false;
                }

                if (description === '') {
                    displayErrorMessage('description-error', 'Please enter a product description.');
                    isValid = false;
                }

                if (parseInt(quantity) < 0) {
                    displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                    isValid = false;
                }

                if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                    displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                    isValid = false;
                }
                if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                    displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                    isValid = false;
                }

                if (color.trim() === "") {
                    displayErrorMessage('color-error', 'Please enter a color.');
                    isValid = false;
                }
                if (size === '') {
                    displayErrorMessage('size-error', 'Please select a size.');
                    isValid = false;
                }
                if (!imageDatas && images.files.length === 0) {
                    displayErrorMessage("images-error", 'Please select an image.');
                    isValid = false;
                }
                return isValid;
            }

            function displayErrorMessage(elementId, message) {
                var errorElement = document.getElementById(elementId);
                errorElement.innerText = message;
                errorElement.style.display = "block";
            }

            function clearErrorMessages() {
                const errorElements = document.getElementsByClassName('error-message');
                Array.from(errorElements).forEach(element => {
                    element.innerText = '';
                });
                const errorMessage = document.getElementById('errorMessage');
            }

            function viewImage1(event) {
                document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
            }

            function viewImage2(event) {
                document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
            }

            function viewImage3(event) {
                document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
            }

            function viewImage4(event) {
                document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
            }

            function viewImage(event, index) {
                let input = event.target;
                let reader = new FileReader();
                reader.onload = function () {
                    let dataURL = reader.result;
                    let image = document.getElementById('imgView' + index);
                    image.src = dataURL;
                    let cropper = new Cropper(image, {
                        aspectRatio: 1,
                        viewMode: 1,
                        guides: true,
                        background: false,
                        autoCropArea: 1,
                        zoomable: true
                    });
                    let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                    cropperContainer.style.display = 'block';
                    let saveButton = document.querySelector('#saveButton' + index);
                    saveButton.addEventListener('click', async function () {
                        let croppedCanvas = cropper.getCroppedCanvas();
                        let croppedImage = document.getElementById("croppedImg" + index);
                        croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                        let timestamp = new Date().getTime();
                        let fileName = `cropped-img-${timestamp}-${index}.png`;
                        await croppedCanvas.toBlob(blob => {
                            let input = document.getElementById('input' + index);
                            let imgFile = new File([blob], fileName, blob)
                            const fileList = new DataTransfer();
                            fileList.items.add(imgFile);
                            input.files = fileList.files
                        });
                        cropperContainer.style.display = 'none';
                    });
                };
                reader.readAsDataURL(input.files[0]);
            }

            const selectedImages = [];
            document.getElementById("imageInput").addEventListener("change", handleFileSelect);

            function handleFileSelect(event) {
                const addedImagesContainer = document.getElementById("addedImagesContainer");
                addedImagesContainer.innerHTML = "";
                const files = event.target.files;
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    selectedImages.push(file);
                    const thumbnail = document.createElement("div");
                    thumbnail.classList.add("thumbnail");
                    const img = document.createElement("img");
                    img.src = URL.createObjectURL(file);
                    img.alt = "thumbnail";
                    img.style.width = "50px";
                    img.style.height = "auto";
                    const removeIcon = document.createElement("span");
                    removeIcon.classList.add("remove-icon");
                    removeIcon.innerHTML = "&times;";
                    removeIcon.addEventListener("click", function () {
                        const index = selectedImages.indexOf(file);
                        if (index !== -1) {
                            selectedImages.splice(index, 1);
                        }
                        thumbnail.remove();
                    });
                    thumbnail.appendChild(img);
                    thumbnail.appendChild(removeIcon);
                    addedImagesContainer.appendChild(thumbnail);
                }
            };

            function deleteSingleImage(imageId, productId) {
                $.ajax({
                    url: "/admin/deleteImage",
                    method: "post",
                    data: { imageNameToServer: imageId, productIdToServer: productId },
                    success: ((response) => {
                        if (response.status === true) {
                            window.location.reload()
                        }
                    })
                })
            }
        </script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            // Handle logout action with fetch
            document.getElementById('logoutLink').addEventListener('click', function (event) {
                event.preventDefault(); // Prevent the default link behavior

                // Send fetch request to logout
                fetch('/admin/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ action: 'logout' })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Show success SweetAlert
                            Swal.fire({
                                icon: 'success',
                                title: 'Logged Out',
                                text: data.message, // Message from the backend
                                timer: 2000, // Wait for 2 seconds before redirect
                                showConfirmButton: false // Hide the confirm button
                            }).then(() => {
                                // Redirect after showing SweetAlert
                                window.location.replace('/admin/login');
                            });
                        } else {
                            // If logout failed, show an error SweetAlert
                            Swal.fire({
                                icon: 'error',
                                title: 'Logout Failed',
                                text: data.message, // Message from the backend
                                confirmButtonText: 'Try Again'
                            });
                        }
                    })
                    .catch(error => {
                        // Handle any network errors
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred. Please try again later.',
                            confirmButtonText: 'Okay'
                        });
                    });
            });
        </script>